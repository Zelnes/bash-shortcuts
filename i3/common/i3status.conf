# i3status configuration file.
# see "man i3status" for documentation.

# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# ß
# If the above line is not correctly displayed, fix your editor first!

general {
    output_format = "i3bar"
    colors = true
    interval = 1
}

order += "google_calendar"
# order += "external_script ProxyInfo"h
# order += "external_script sshTunnel"
# order += "vpn_status cisco"
# order += "vpn_status ovpn"
order += "external_script PlayerInfo"
order += "external_script bluetoothJabra"
order += "bluetooth"
# order += "ipv6"
order += "disk /"
order += "networkmanager"
order += "battery_level"
order += "volume master"
order += "sysdata"
# order += "backlight"
order += "tztime local"

volume {
    cache_timeout = 1
    # format = ‘[?color=cpu CPU: {cpu_usage}%], ‘ ‘[?color=mem Mem: {mem_used}/{mem_total} GB ({mem_used_percent}%)]’
}

wireless _first_ {
    format_up = "W: (%quality at %essid) %ip"
    format_down = ""
}

ethernet enx482ae3880b54 {
    # if you use %speed, i3status requires root privileges
    format_up = "enx482ae3880b54: %ip (%speed)"
    format_down = ""
}
ethernet enp0s31f6 {
    # if you use %speed, i3status requires root privileges
    format_up = "enp0s31f6: %ip (%speed)"
    format_down = ""
}
ethernet _first_ {
        # if you use %speed, i3status requires root privileges
        format_up = "E: %ip (%speed)"
        format_down = "E: down"
}

networkmanager {

}

battery all {
    format = "%status %percentage %remaining"
    # threshold_full = 98
}

tztime local {
    on_click 1 = "exec gsimplecal"
    format = "%Y-%m-%d %H:%M:%S"
}

load {
    format = "%1min"
}

disk "/" {
    format = "Sys %avail"
}

disk "/home" {
    format = "Home %avail"
}

volume master {
    format = "♪: %volume"
    format_muted = "♪: muted (%volume)"
    device = "default"
    mixer = "Master"
    mixer_idx = 0
}

backlight {
    brightness_delta = 2
    brightness_initial = 50
    brightness_minimal = 10
    format = "☼:{level}%"
    device = automatic
}

external_script "PlayerInfo" {
    cache_timeout = 0.4
    format = "{output}"
    script_path = "${HOME}/.config/i3/bin/player_metadata.sh"
}

vpn_status "ovpn" {
    check_pid = True
    pidfile = "/sys/class/net/tun0/dev_id"
    format = "OpenVPN: {name}|OpenVPN: no"
    cache_timeout = 1
    on_click 1 = "exec ${HOME}/.config/i3/bin/vpns.sh vpn_openvpn_up"
    on_click 3 = "exec ${HOME}/.config/i3/bin/vpns.sh vpn_openvpn_down"
}

vpn_status "cisco" {
    check_pid = True
    pidfile = "/sys/class/net/cscotun0/dev_id"
    format = "VPN Cisco: {name}|VPN Cisco: no"
    cache_timeout = 1
    on_click 1 = "exec ${HOME}/.config/i3/bin/vpns.sh vpn_cisco_up"
    on_click 3 = "exec ${HOME}/.config/i3/bin/vpns.sh vpn_cisco_down"
}

# Pour avoir l'info de la batterie, il faut activer dans le mode experimental à bluetoothd
# vim : /etc/systemd/system/bluetooth.target.wants/bluetooth.service -> ExecStart=/usr/lib/bluetooth/bluetoothd --experimental
# sudo systemctl daemon-reload
# sudo systemctl restart bluetooth.service
# On reconnecte le casque puis :
# dbus-send --print-reply=literal --system --dest=org.bluez /org/bluez/hci0/dev_70_BF_92_01_E2_31 org.freedesktop.DBus.Properties.Get string:"org.bluez.Battery1" string:"Percentage"
# Enfin, pour le module bluetooth de py3status : j'ai récupéré le code depuis le github (https://github.com/ultrabug/py3status/blob/master/py3status/modules/bluetooth.py)
# et je l'ai positionné dans ~/.config/py3status/modules/ C'est en attendant que la batterie se retrouve dans la dernière version
bluetooth {
    cache_timeout = 3
    format_device = "\?if=connected&color=connected {alias} ({battery}%)"
    format_adapter = "{format_device}"
    format = "BT {format_adapter}"
    on_click 1 = "exec ${HOME}/dev/perso/bash-shortcuts/bash/common/bluetooth.sh set_profile a2dp_sink"
    on_click 2 = "exec ${HOME}/dev/perso/bash-shortcuts/bash/common/bluetooth.sh toggle_connection"
    on_click 3 = "exec ${HOME}/dev/perso/bash-shortcuts/bash/common/bluetooth.sh set_profile handsfree_head_unit"
}

external_script "bluetoothJabra" {
    format = "{output}"
    script_path = "${HOME}/.config/i3/bin/jabra.sh"
    on_click 1 = "exec ${HOME}/.config/i3/bin/jabra.sh connect"
    on_click 3 = "exec ${HOME}/.config/i3/bin/jabra.sh disconnect"
    cache_timeout = 5
}

external_script "sshTunnel" {
    format = "{output}"
    script_path = "${HOME}/.config/i3/bin/ssh_tunnels.sh"
    on_click 1 = "touch /tmp/pkexec"
    cache_timeout = 5
}

external_script "Atosproxy" {
    format = "{output}"
    script_path = "${HOME}/.config/i3/bin/atos_proxy.sh"
    on_click 1 = "exec pkexec ${HOME}/.config/i3/bin/atos_proxy.sh _setAptProxy; exec ${HOME}/.config/i3/bin/atos_proxy.sh _setProxy"
    on_click 3 = "exec pkexec ${HOME}/.config/i3/bin/atos_proxy.sh _unsetAptProxy; exec ${HOME}/.config/i3/bin/atos_proxy.sh _unsetProxy"
    cache_timeout = 5
}

external_script "TeamsStatus" {
    format = "{output}"
    script_path = "cat /tmp/teams_state"
    cache_timeout = 1
}

google_calendar {
    num_events = 2
    events_within_hours = 60
    response = ["tentative", "needsAction", "accepted"]
    warn_threshold = 5
    time_to_max = 400
    preferred_event_link = hangoutLink
    # preferred_event_link = "Zoom link"
    format_time = "%H:%M"
        # "[\?if=!is_toggled ({start_time}-{end_time}, {start_date})|[ ({location})][ {format_timer}]]"
    # format_event = "[\?color=event {summary}][\?if=is_toggled=0 {}|\?if=is_toggled=1 ({start_time}-{end_time}, {start_date})|[ ({location})]]"
    format_event = "[\?color=event {summary}][\?if=is_toggled=1 ({start_time}-{end_time}, {start_date})][\?if=is_toggled=2 ({location})][ {format_timer}]"
        thresholds = {
        'event': [(1, '#d0e6ff'), (2, '#bbdaff'), (3, '#99c7ff'),
            (4, '#86bcff'), (5, '#62a9ff'), (6, '#8c8cff'), (7, '#7979ff')],
        'time': [(1, '#ffcece'), (2, '#ffbfbf'), (3, '#ff9f9f'),
            (4, '#ff7f7f'), (5, '#ff5f5f'), (6, '#ff3f3f'), (7, '#ff1f1f')]
    }
}
